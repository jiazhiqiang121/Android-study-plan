1.参数 
2.抽象类 
3.接口

1.默认的方法实现  
2.它可以有默认的方法实现  
3.接口完全是抽象的。它根本不存在方法的实现 

1.实现 
2.子类使用extends关键字来继承抽象类。如果子类不是抽象类的话，它需要提供抽象类中所有声明的方法的实现。 
3.子类使用关键字implements来实现接口。它需要提供接口中所有声明的方法的实现 

1.构造器 
2.抽象类可以有构造器 
3.接口不能有构造器 

1.与正常Java类的区别 
2.除了你不能实例化抽象类之外，它和普通Java类没有任何区别 
3.接口是完全不同的类型 

1.访问修饰符 
2.抽象方法可以有public、protected和default这些修饰符 
3.接口方法默认修饰符是public。你不可以使用其它修饰符。 

1.main方法 
2.抽象方法可以有main方法并且我们可以运行它 
3.接口没有main方法，因此我们不能运行它。 

1.多继承 
2.抽象方法可以继承一个类和实现多个接口 
3.接口只可以继承一个或多个其它接口 

1.速度 
2.它比接口速度要快 
3.接口是稍微有点慢的，因为它需要时间去寻找在类中实现的方法。

1.添加新方法 
2.如果你往抽象类中添加新的方法，你可以给它提供默认的实现。因此你不需要改变你现在的代码。 
3.如果你往接口中添加方法，那么你必须改变实现该接口的类。 
